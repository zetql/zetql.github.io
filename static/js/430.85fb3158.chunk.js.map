{"version":3,"file":"static/js/430.85fb3158.chunk.js","mappings":"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","sources":["subjects/stock/relative-stock.query.ts","routes/stock/mains/RelativeCursor.tsx","utils/fetchClient.ts","../../../packages/ui/src/formats/localeNumber.tsx","../../../packages/ui/src/list/ListFetcher.tsx","../../../packages/ui/src/table/useTableState.tsx","../../../packages/ui/src/hooks/useStateRef.ts","../../../packages/ui/src/table/TableList.tsx"],"sourcesContent":["import { fetchClient } from '@/utils/fetchClient.ts';\nimport { createInfiniteQuery } from '@zetql/react';\nimport { StockModel } from '@/models/Stock.model.ts';\n\ninterface StockList {\n  stocks: Array<StockModel>;\n  nextCursor: number | undefined;\n}\nconst fetchStocks: (param?: {\n  offset: number | undefined;\n}) => Promise<StockList> = (offset) => {\n  return fetchClient(\n    `/stocks-relative-cursor${\n      typeof offset?.offset === 'number' ? `?offset=${offset?.offset}` : ''\n    }`\n  ).then(({ data, nextCursor }) => {\n    return { stocks: data, nextCursor };\n  });\n};\nexport const relativeStockQuery = createInfiniteQuery<\n  StockList,\n  { offset: number | undefined }\n>({\n  query: fetchStocks,\n  cursorMode: 'relative',\n  normalize: (pages) => {\n    return pages.reduce((p: StockModel[], c) => {\n      return p.concat(c.data.stocks);\n    }, []);\n  },\n  cacheKeyBy(cursor) {\n    return cursor.offset;\n  },\n  getNextCursor: ({ data }) => {\n    return data.nextCursor ? { offset: data.nextCursor } : null;\n  },\n});\n","import { StockModel } from '@/models/Stock.model.ts';\nimport { useEffect } from 'react';\nimport { ListFetcher } from '@ui/list/ListFetcher.tsx';\nimport { TableList } from '@ui/table/TableList.tsx';\nimport styled from 'styled-components';\nimport { TableGenerator } from '@ui/table/table.type.ts';\nimport { LocaleNumber } from '@ui/formats/localeNumber.tsx';\nimport { useSubjectValue } from '@zetql/react';\nimport { ErrorPage } from '@ui/error/ErrorPage.tsx';\nimport { relativeStockQuery } from '@/subjects/stock/relative-stock.query.ts';\nimport { UiButton } from '@ui/buttons';\nimport { AppGutter } from '@/routes/layout/AppLayout.tsx';\nimport { TableClassNames } from '@ui/table/table.style.ts';\n\nconst UpDown = styled.span`\n  display: block;\n  margin-top: 4px;\n  color: #121212;\n  &.is-down {\n    color: #007aff;\n  }\n  &.is-up {\n    color: #e74c3c;\n  }\n`;\n\nconst generator: TableGenerator<StockModel> = [\n  {\n    key: 'id',\n    body: (data) => data.id.toString(),\n    head: 'ID',\n    width: '60px',\n  },\n  {\n    key: 'name',\n    body: (data) => data.name,\n    head: 'Name',\n    flex: 2.5,\n  },\n  {\n    key: 'symbol',\n    body: (data) => data.symbol,\n    head: 'Symbol',\n  },\n  {\n    key: 'company',\n    body: (data) => data.company,\n    head: 'Company',\n  },\n  {\n    key: 'price',\n    body: (data) => (\n      <>\n        <LocaleNumber amount={data.price} />\n        <UpDown\n          className={\n            data.percent > 0\n              ? 'is-up'\n              : data.percent === 0\n              ? undefined\n              : 'is-down'\n          }\n        >\n          {data.percent}%\n        </UpDown>\n      </>\n    ),\n    head: 'Price',\n  },\n];\n\nconst Controller = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 10px 20px;\n  position: sticky;\n  top: 0;\n  height: 60px;\n  background-color: #f8f8f8;\n  z-index: 4;\n  ${UiButton} {\n    margin-left: 10px;\n  }\n`;\nconst ScrollableWrapper = styled.div`\n  overflow-y: scroll;\n  height: 100%;\n  position: relative;\n`;\n\nconst StyledTableList = styled(TableList<StockModel>)`\n  & .${TableClassNames.thead} {\n    position: sticky;\n    top: 60px;\n  }\n`;\nconst RelativeCursor = () => {\n  const {\n    isFetching,\n    isFetchingPrev,\n    isFetchingNext,\n    isRefetching,\n    data,\n    error,\n    nextCursor,\n  } = useSubjectValue(relativeStockQuery);\n  useEffect(() => {\n    relativeStockQuery.fetchQuery((firstCursor) => {\n      if (firstCursor) {\n        // it will keep the old cache if it exists\n        return firstCursor;\n      }\n      return { offset: undefined };\n    }, 'stock');\n  }, []);\n  if (error) {\n    return (\n      <ErrorPage\n        buttons={[\n          {\n            label: 'reload',\n            onClick: () => {\n              relativeStockQuery.refetchQuery();\n            },\n          },\n        ]}\n      />\n    );\n  }\n  return (\n    <ScrollableWrapper>\n      <AppGutter>\n        <Controller>\n          <UiButton\n            fillColor={'primary'}\n            fillType={'line'}\n            onClick={() => {\n              relativeStockQuery.fetchQuery({ offset: undefined });\n            }}\n          >\n            restart\n          </UiButton>\n          <UiButton\n            fillColor={'primary'}\n            fillType={'fill'}\n            onClick={() => {\n              relativeStockQuery.refetchQuery();\n            }}\n          >\n            refetch\n          </UiButton>\n        </Controller>\n        <StyledTableList\n          isLoading={!relativeStockQuery.isInitiated() && isFetching}\n          className={'default-table'}\n          items={data}\n          trackBy={(data) => data.id.toString()}\n          generator={generator}\n        />\n        <ListFetcher\n          hasNext={!!nextCursor}\n          isFetching={isFetchingNext}\n          recheckDeps={`${isRefetching}_${isFetchingPrev}`}\n          fetch={relativeStockQuery.fetchNext}\n        />\n      </AppGutter>\n    </ScrollableWrapper>\n  );\n};\n\nexport default RelativeCursor;\n","export const fetchClient = (...args: Parameters<typeof fetch>) => {\n\treturn fetch(...args).then((res) => {\n\t\treturn res\n\t\t\t.json()\n\t\t\t.then((json) => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow json;\n\t\t\t\t}\n\t\t\t\treturn json;\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (res.ok) {\n\t\t\t\t\treturn {};\n\t\t\t\t} else {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t});\n\t});\n};\n","import { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const commaTransform = (num: number | string) => {\n\ttry {\n\t\treturn typeof num === 'number' ? num.toLocaleString() : Number(num).toLocaleString();\n\t} catch (e) {\n\t\treturn '???';\n\t}\n};\n\nconst Wrapper = styled.span`\n\tfont-variant-numeric: tabular-nums;\n`;\nexport const LocaleNumber = ({\n\tamount,\n\tclassName,\n\tunit,\n\titemProp,\n}: {\n\tamount: number | string;\n\tclassName?: string;\n\tunit?: ReactNode;\n\titemProp?: string;\n}) => {\n\treturn (\n\t\t<Wrapper className={className} itemProp={itemProp}>\n\t\t\t{commaTransform(amount)}\n\t\t\t{unit ?? '원'}\n\t\t</Wrapper>\n\t);\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { RelativeThrobber } from '@ui/throbber';\n\nexport const ListFetcher = ({\n\thasNext,\n\tfetch,\n\trecheckDeps,\n\tisFetching,\n\troot,\n}: {\n\tfetch: () => void;\n\thasNext: boolean;\n\trecheckDeps?: any;\n\tisFetching: boolean;\n\troot?: HTMLElement | null;\n}) => {\n\tconst fetchRef = useRef(fetch);\n\tconst [el, setEl] = useState<HTMLElement | null>(null);\n\n\tuseEffect(() => {\n\t\tif (el && hasNext && !isFetching) {\n\t\t\tconst observer = new IntersectionObserver(\n\t\t\t\t(\n\t\t\t\t\tentries: IntersectionObserverEntry[],\n\t\t\t\t\tobserver: IntersectionObserver\n\t\t\t\t) => {\n\t\t\t\t\tentries.forEach((entry) => {\n\t\t\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\t\t\tfetchRef.current?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t{ root, rootMargin: '-40px 0px' }\n\t\t\t);\n\t\t\tobserver.observe(el);\n\t\t\treturn () => {\n\t\t\t\tobserver.disconnect();\n\t\t\t};\n\t\t}\n\t}, [el, hasNext, isFetching, recheckDeps]);\n\tif (hasNext) {\n\t\treturn (\n\t\t\t<div ref={setEl}>\n\t\t\t\t<RelativeThrobber />\n\t\t\t</div>\n\t\t);\n\t}\n\treturn null;\n};\n","import { useStateRef } from '@ui/hooks/useStateRef';\nimport { SetStatePayload, TypeOfValue } from \"@ui/type.ts\";\n\nexport const TableSortLabel = { desc: 'desc', asc: 'asc' } as const;\nexport type TableSortLabel = TypeOfValue<typeof TableSortLabel>;\nexport type TableSortData = { key: string; order: TableSortLabel };\n\nexport interface UiTableState {\n\tsortData: TableSortData;\n\tquery: string;\n\tselectFilters: Map<string, string>;\n\tselectedSet: Set<string>;\n}\n\nconst TABLE_STATE_INIT: UiTableState = {\n\tsortData: { key: '', order: 'desc' },\n\tquery: '',\n\tselectFilters: new Map(),\n\tselectedSet: new Set(),\n};\n\nexport type UiTableSetState = (fn: SetStatePayload<UiTableState>, b?: boolean) => void;\nexport const useTableState = () => {\n\tconst { state, setState, getState, setMutation } = useStateRef<UiTableState>(() => {\n\t\treturn {\n\t\t\t...TABLE_STATE_INIT,\n\t\t};\n\t});\n\n\treturn { getTableState: getState, setTableState: setState, mutateTableState: setMutation, tableState: state };\n};\n","import { useCallback, useRef, useState } from 'react'\nimport { SetStatePayload } from \"@ui/type.ts\";\n\ntype SetState<T, P> = (fn: SetStatePayload<T>) => P;\ntype GetState<T> = () => T;\nexport function useStateRef<T>(\n\tinitState: T | (() => T),\n\tsyncFn?: (s: T) => void,\n): { state: T; setState: SetState<T, void>; setMutation: SetState<T, T>; getState: () => T } {\n\tconst stateRef = useRef<T>(initState as T)\n\tif (typeof stateRef.current === 'function' && stateRef.current === initState) {\n\t\tstateRef.current = stateRef.current()\n\t}\n\tconst syncFnRef = useRef(syncFn)\n\tsyncFnRef.current = syncFn\n\tconst [_, trigger] = useState(0)\n\tconst setState: (fn: SetStatePayload<T>, skip?: boolean) => void = useCallback(function (fn: SetStatePayload<T>, skipTrigger?: boolean) {\n\t\tconst origin = stateRef.current\n\t\tconst state = typeof fn === 'function' ? (fn as (s:T) => T)(origin) : fn\n\t\tconst keys = Object.keys(state) as Array<keyof T>\n\t\tif (keys.some((key) => state[key] !== origin[key])) {\n\t\t\tif (typeof origin === 'object' && origin && !Array.isArray(origin)) {\n\t\t\t\tstateRef.current = { ...origin, ...state }\n\t\t\t} else {\n\t\t\t\tstateRef.current = state as T\n\t\t\t}\n\t\t\tif (typeof syncFnRef.current === 'function') {\n\t\t\t\tsyncFnRef.current(stateRef.current)\n\t\t\t}\n\t\t\tif (!skipTrigger) {\n\t\t\t\ttrigger((n) => n + 1)\n\t\t\t}\n\t\t}\n\t}, [])\n\tconst setMutation = useCallback((fn: SetStatePayload<T>) => {\n\t\tsetState(fn, true)\n\t\treturn stateRef.current\n\t}, [])\n\tconst getState: GetState<T> = useCallback(() => {\n\t\treturn stateRef.current\n\t}, [])\n\treturn { state: stateRef.current, setState, setMutation, getState }\n}\n","import React, { memo, ReactElement, ReactNode, useMemo } from 'react';\nimport { classnames } from '@ui/helpers/classnames';\nimport { UiTableSetState, UiTableState, useTableState } from './useTableState';\nimport { RelativeThrobber } from '@ui/throbber';\nimport {\n\tCellHeadCreator,\n\tTableGenerator,\n\tTableGeneratorRow,\n\tTableGroupProps,\n\tTableProp,\n\tTableSearchQuery,\n} from '@ui/table/table.type.ts';\nimport { TableClassNames, TableStyle } from '@ui/table/table.style.ts';\n\nconst getWidthStyle = (width?: number | string, flex?: number) => {\n\treturn typeof width === 'string'\n\t\t? { width, flex: flex || 'none' }\n\t\t: flex\n\t\t? { flex: `${flex} ${flex} ${flex * 10}px` }\n\t\t: { flex: '1 1 10px' };\n};\nconst HeadRowCreator = <T,>({\n\tgenerator,\n\ttableState,\n\tsetTableState,\n}: {\n\tgenerator: TableGenerator<T>;\n\ttableState: UiTableState;\n\tsetTableState: UiTableSetState;\n}) => {\n\tconst { sortData } = tableState;\n\treturn (\n\t\t<TableStyle.Tr>\n\t\t\t{generator.map(({ head, width, flex, sort, className, key, headSelect }) => {\n\t\t\t\tconst headFn = getHeader<T>(head);\n\t\t\t\treturn (\n\t\t\t\t\t<TableStyle.Th key={key} className={className} style={getWidthStyle(width, flex)}>\n\t\t\t\t\t\t{headFn(tableState, setTableState, key === sortData.key ? sortData.order : '')}\n\t\t\t\t\t</TableStyle.Th>\n\t\t\t\t);\n\t\t\t})}\n\t\t</TableStyle.Tr>\n\t);\n};\nconst BodyRowCreator = <T,>({\n\titem,\n\tonRowClick,\n\tgenerator,\n\ttableState,\n\tsetTableState,\n\tisSelected,\n\tattachmentRender,\n}: {\n\titem: T;\n\tonRowClick?: (s: T) => void;\n\tgenerator: TableGenerator<T>;\n\ttableState: UiTableState;\n\tsetTableState: UiTableSetState;\n\tisSelected: boolean;\n\tattachmentRender?: TableProp<T>['attachmentRender'];\n}) => {\n\tconst isClickable = Boolean(onRowClick);\n\tconst row = (\n\t\t<TableStyle.Tr\n\t\t\titemScope\n\t\t\tclassName={classnames(isClickable ? 'is-clickable' : '', isSelected ? 'is-selected' : '')}\n\t\t\ttabIndex={0}\n\t\t\tonClick={() => {\n\t\t\t\tonRowClick?.(item);\n\t\t\t}}\n\t\t>\n\t\t\t{generator.map(({ body, width, flex, className, key }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<TableStyle.Td key={key} itemProp={key} className={className} style={getWidthStyle(width, flex)}>\n\t\t\t\t\t\t{body(item, tableState, setTableState)}\n\t\t\t\t\t</TableStyle.Td>\n\t\t\t\t);\n\t\t\t})}\n\t\t</TableStyle.Tr>\n\t);\n\tif (attachmentRender) {\n\t\treturn (\n\t\t\t<TableStyle.Attachment itemScope>\n\t\t\t\t{row}\n\t\t\t\t{attachmentRender(item, tableState, setTableState)}\n\t\t\t</TableStyle.Attachment>\n\t\t);\n\t}\n\treturn row;\n};\n\nconst EmptyRowCreator = ({ isLoading, empty }: { isLoading?: boolean; empty: ReactNode }) => {\n\treturn <TableStyle.Empty>{isLoading ? <RelativeThrobber /> : empty || 'Nothing to Display'}</TableStyle.Empty>;\n};\n\nfunction getHeader<T>(head: TableGeneratorRow<T>['head']): CellHeadCreator {\n\tconst type = typeof head;\n\tif (type === 'string') {\n\t\treturn () => head as string;\n\t}\n\tif (type === 'function') {\n\t\treturn head as CellHeadCreator;\n\t}\n\treturn () => '';\n}\n\nconst useNormalizeProps = <T,>(props: TableProp<T>) => {\n\tconst { trackBy, generator } = props;\n\tconst trackByFn = useMemo(() => {\n\t\tif (typeof trackBy === 'function') {\n\t\t\treturn trackBy;\n\t\t}\n\t\tif (typeof trackBy === 'string') {\n\t\t\treturn (item: T) => {\n\t\t\t\treturn (item[trackBy as keyof T] || '').toString();\n\t\t\t};\n\t\t}\n\t\treturn (item: T, i: number) => {\n\t\t\treturn i.toString();\n\t\t};\n\t}, [trackBy]);\n\tconst filterData = useMemo(() => {\n\t\tconst filterData: {\n\t\t\tselect: Map<string, TableSearchQuery<T>>;\n\t\t\tquery: Map<string, TableSearchQuery<T>>;\n\t\t} = {\n\t\t\tselect: new Map(),\n\t\t\tquery: new Map(),\n\t\t};\n\t\tgenerator.forEach(({ key, headSelect, query }) => {\n\t\t\tif (headSelect) {\n\t\t\t\tfilterData.select.set(key, headSelect.filter);\n\t\t\t}\n\t\t\tif (query) {\n\t\t\t\tfilterData.query.set(key, query);\n\t\t\t}\n\t\t});\n\t\treturn filterData;\n\t}, [generator]);\n\treturn { trackByFn, filterData };\n};\n\n// eslint-disable-next-line react/display-name\nexport const TableList = memo(<T = any,>(props: TableProp<T>) => {\n\tconst { filter, items, generator, className, attachmentRender, onRowClick, isLoading, empty, normalizeQuery } = props;\n\n\tconst { tableState, setTableState } = useTableState();\n\tconst { sortData, query: rq, selectFilters } = tableState;\n\tconst query = normalizeQuery ? normalizeQuery(rq) : rq;\n\tconst sortFn = generator.find(({ key }) => sortData.key === key)?.sort;\n\tconst { filterData, trackByFn } = useNormalizeProps(props);\n\n\tconst filtered = useMemo(() => {\n\t\tconst filtered = items.filter((item) => {\n\t\t\tfor (const [key, fn] of filterData.select) {\n\t\t\t\tconst value = selectFilters.get(key);\n\t\t\t\t// console.log(value, fn)\n\t\t\t\tif (fn && value && !fn(item, value, tableState)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (query) {\n\t\t\t\tlet passed = false;\n\t\t\t\tfor (const [key, fn] of filterData.query) {\n\t\t\t\t\tif (fn?.(item, query, tableState)) {\n\t\t\t\t\t\tpassed = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!passed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn filter ? filter(item) : true;\n\t\t});\n\t\tif (!sortFn) {\n\t\t\treturn filtered;\n\t\t}\n\t\treturn filtered.sort(sortFn(sortData.order));\n\t}, [filterData, items, tableState, filter, selectFilters]);\n\treturn (\n\t\t<TableStyle.Table className={className}>\n\t\t\t<TableStyle.Thead className={TableClassNames.thead}>\n\t\t\t\t<HeadRowCreator generator={generator} tableState={tableState} setTableState={setTableState} />\n\t\t\t</TableStyle.Thead>\n\t\t\t<TableStyle.Tbody className={TableClassNames.tbody}>\n\t\t\t\t{!isLoading && filtered.length > 0 ? (\n\t\t\t\t\tfiltered.map((item, i) => {\n\t\t\t\t\t\tconst key = trackByFn(item, i);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<BodyRowCreator\n\t\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tisSelected={tableState.selectedSet.has(key)}\n\t\t\t\t\t\t\t\tgenerator={generator}\n\t\t\t\t\t\t\t\tonRowClick={onRowClick}\n\t\t\t\t\t\t\t\ttableState={tableState}\n\t\t\t\t\t\t\t\tsetTableState={setTableState}\n\t\t\t\t\t\t\t\tattachmentRender={attachmentRender}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t) : (\n\t\t\t\t\t<EmptyRowCreator empty={empty} isLoading={isLoading} />\n\t\t\t\t)}\n\t\t\t</TableStyle.Tbody>\n\t\t</TableStyle.Table>\n\t);\n}) as <T>(p: TableProp<T>) => ReactElement | null;\n(TableList as any).displayName = 'TableList';\n\n// eslint-disable-next-line react/display-name\nexport const GroupTableList = memo(<T extends { id: string } = any>(props: TableGroupProps<T>) => {\n\tconst {\n\t\tfilter,\n\t\titems,\n\t\tgenerator,\n\t\tgroupBy,\n\t\tclassName,\n\t\tempty,\n\t\tattachmentRender,\n\t\tonRowClick,\n\t\tisLoading,\n\t\tnormalizeQuery,\n\t\tgroupSort,\n\t\tgroupTitleRenderer,\n\t} = props;\n\n\tconst { tableState, setTableState } = useTableState();\n\tconst { sortData, query: rq, selectFilters } = tableState;\n\tconst query = normalizeQuery ? normalizeQuery(rq) : rq;\n\tconst sortFn = generator.find(({ key }) => sortData.key === key)?.sort;\n\tconst { filterData, trackByFn } = useNormalizeProps(props);\n\n\tconst groupByFn = useMemo(() => {\n\t\tif (typeof groupBy === 'function') {\n\t\t\treturn groupBy;\n\t\t}\n\t\tif (typeof groupBy === 'string') {\n\t\t\treturn (item: T) => {\n\t\t\t\treturn (item[groupBy as keyof T] || '').toString();\n\t\t\t};\n\t\t}\n\t\treturn (item: T, i: number) => {\n\t\t\treturn i.toString();\n\t\t};\n\t}, [groupBy]);\n\n\tconst filtered = useMemo(() => {\n\t\tconst map: Record<string, T> = {};\n\t\tconst group: Record<string, { groupId: string; ids: Array<string> }> = {};\n\t\titems.forEach((item, i) => {\n\t\t\tfor (const [key, fn] of filterData.select) {\n\t\t\t\tconst value = selectFilters.get(key);\n\t\t\t\tif (fn && value && !fn(item, value, tableState)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (query) {\n\t\t\t\tlet passed = false;\n\t\t\t\tfor (const [key, fn] of filterData.query) {\n\t\t\t\t\tif (fn?.(item, query, tableState)) {\n\t\t\t\t\t\tpassed = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!passed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst passed = filter ? filter(item) : true;\n\t\t\tif (passed) {\n\t\t\t\tconst key = trackByFn(item, i);\n\t\t\t\tconst groupId = groupByFn(item, i);\n\t\t\t\tmap[key] = item;\n\t\t\t\tif (!group[groupId]) {\n\t\t\t\t\tgroup[groupId] = { groupId, ids: [] };\n\t\t\t\t}\n\t\t\t\tgroup[groupId].ids.push(key);\n\t\t\t}\n\t\t});\n\t\treturn { passedGroup: group, passedMap: map };\n\t}, [filterData, items, tableState, filter, trackByFn, groupByFn]);\n\n\tconst groupedList = useMemo(() => {\n\t\tconst list: Array<{ type: 'content' | 'title'; id: string }> = [];\n\t\tconst { passedMap, passedGroup } = filtered;\n\t\tconst groups = Object.values(passedGroup);\n\t\tif (groupSort) {\n\t\t\tgroups.sort(groupSort);\n\t\t}\n\t\tgroups.forEach(({ groupId, ids }) => {\n\t\t\tif (ids.length && ids.find((itemId) => !!passedMap[itemId])) {\n\t\t\t\tconst sortedIds = sortFn ? ids.sort((a, b) => sortFn(sortData.order)(passedMap[a], passedMap[b])) : ids;\n\t\t\t\tlist.push({ type: 'title', id: groupId });\n\t\t\t\tsortedIds.forEach((itemId) => {\n\t\t\t\t\tif (passedMap[itemId]) {\n\t\t\t\t\t\tlist.push({ type: 'content', id: itemId });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn list;\n\t}, [filtered, groupSort]);\n\n\treturn (\n\t\t<TableStyle.Table className={className}>\n\t\t\t<TableStyle.Thead className={TableClassNames.thead}>\n\t\t\t\t<HeadRowCreator generator={generator} tableState={tableState} setTableState={setTableState} />\n\t\t\t</TableStyle.Thead>\n\t\t\t<TableStyle.Tbody className={TableClassNames.tbody}>\n\t\t\t\t{!isLoading && groupedList.length > 0 ? (\n\t\t\t\t\tgroupedList.map((item, i) => {\n\t\t\t\t\t\tconst { id: key, type } = item;\n\t\t\t\t\t\tif (type === 'title') {\n\t\t\t\t\t\t\treturn groupTitleRenderer(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<BodyRowCreator\n\t\t\t\t\t\t\t\titem={filtered.passedMap[key]}\n\t\t\t\t\t\t\t\tkey={'item::' + key}\n\t\t\t\t\t\t\t\tisSelected={tableState.selectedSet.has(key)}\n\t\t\t\t\t\t\t\tgenerator={generator}\n\t\t\t\t\t\t\t\tonRowClick={onRowClick}\n\t\t\t\t\t\t\t\ttableState={tableState}\n\t\t\t\t\t\t\t\tsetTableState={setTableState}\n\t\t\t\t\t\t\t\tattachmentRender={attachmentRender}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t) : (\n\t\t\t\t\t<TableStyle.Empty>\n\t\t\t\t\t\t{isLoading ? <RelativeThrobber /> : <EmptyRowCreator empty={empty} isLoading={isLoading} />}\n\t\t\t\t\t</TableStyle.Empty>\n\t\t\t\t)}\n\t\t\t</TableStyle.Tbody>\n\t\t</TableStyle.Table>\n\t);\n}) as <T>(p: TableGroupProps<T>) => ReactElement | null;\n(GroupTableList as any).displayName = 'GroupTableList';\n"],"names":["relativeStockQuery","createInfiniteQuery","query","offset","fetchClient","concat","then","_ref","stocks","data","nextCursor","cursorMode","normalize","pages","reduce","p","c","cacheKeyBy","cursor","getNextCursor","_ref2","UpDown","styled","span","_templateObject","_taggedTemplateLiteral","generator","key","body","id","toString","head","width","name","flex","symbol","company","_jsxs","_Fragment","children","_jsx","LocaleNumber","amount","price","className","percent","undefined","Controller","div","_templateObject2","UiButton","ScrollableWrapper","_templateObject3","StyledTableList","TableList","_templateObject4","TableClassNames","thead","_useSubjectValue","useSubjectValue","isFetching","isFetchingPrev","isFetchingNext","isRefetching","error","useEffect","fetchQuery","firstCursor","ErrorPage","buttons","label","onClick","refetchQuery","AppGutter","fillColor","fillType","isLoading","isInitiated","items","trackBy","ListFetcher","hasNext","recheckDeps","fetch","fetchNext","apply","arguments","res","json","ok","catch","err","commaTransform","num","toLocaleString","Number","e","Wrapper","unit","itemProp","root","fetchRef","useRef","_useState","useState","_useState2","_slicedToArray","el","setEl","observer","IntersectionObserver","entries","forEach","entry","_fetchRef$current","isIntersecting","current","call","rootMargin","observe","disconnect","ref","RelativeThrobber","TABLE_STATE_INIT","sortData","order","selectFilters","Map","selectedSet","Set","useTableState","_useStateRef","initState","syncFn","stateRef","syncFnRef","trigger","setState","useCallback","fn","skipTrigger","origin","state","Object","keys","some","Array","isArray","_objectSpread","n","setMutation","getState","useStateRef","getTableState","setTableState","mutateTableState","tableState","getWidthStyle","HeadRowCreator","TableStyle","Tr","map","sort","headFn","headSelect","type","getHeader","Th","style","BodyRowCreator","_ref3","item","onRowClick","isSelected","attachmentRender","isClickable","Boolean","row","itemScope","classnames","tabIndex","_ref4","Td","Attachment","EmptyRowCreator","_ref5","empty","Empty","useNormalizeProps","props","trackByFn","useMemo","i","filterData","select","_ref6","set","filter","memo","_generator$find","normalizeQuery","_useTableState","rq","sortFn","find","_ref7","_useNormalizeProps","filtered","_step","_iterator","_createForOfIteratorHelper","s","done","_step$value","value","get","f","_step2","passed","_iterator2","_step2$value","Table","Thead","Tbody","tbody","length","has","displayName","_generator$find2","groupBy","groupSort","groupTitleRenderer","_useTableState2","_ref8","_useNormalizeProps2","groupByFn","group","_step3","_iterator3","_step3$value","_step4","_iterator4","_step4$value","groupId","ids","push","passedGroup","passedMap","groupedList","list","groups","values","_ref9","itemId","sortedIds","a","b"],"sourceRoot":""}