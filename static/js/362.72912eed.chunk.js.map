{"version":3,"file":"static/js/362.72912eed.chunk.js","mappings":"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","sources":["subjects/stock/static-stock.query.ts","routes/stock/mains/StaticCursor.tsx","utils/fetchClient.ts","../../../packages/ui/src/formats/localeNumber.tsx","../../../packages/ui/src/list/ListFetcher.tsx","../../../packages/ui/src/table/useTableState.tsx","../../../packages/ui/src/hooks/useStateRef.ts","../../../packages/ui/src/table/TableList.tsx"],"sourcesContent":["import { fetchClient } from '@/utils/fetchClient.ts';\nimport { createInfiniteQuery } from '@zetql/react';\nimport { StockModel } from '@/models/Stock.model.ts';\ninterface StockList {\n  stocks: Array<StockModel>;\n  hasNext: boolean;\n}\nconst fetchStocks: ({\n  size,\n  page,\n}: {\n  size: number;\n  page: number;\n}) => Promise<StockList> = ({ size, page }) => {\n  return fetchClient(`/stocks-static-cursor?size=${size}&page=${page}`).then(\n    ({ data, hasNext }) => {\n      return { stocks: data, hasNext };\n    }\n  );\n};\nexport const staticStockQuery = createInfiniteQuery<\n  StockList,\n  { size: number; page: number }\n>({\n  query: fetchStocks,\n  cursorMode: 'static',\n  normalize: (pages) => {\n    return pages.reduce((p: StockModel[], c) => {\n      return p.concat(c.data.stocks);\n    }, []);\n  },\n  cacheKeyBy(cursor) {\n    return cursor.page;\n  },\n  getNextCursor: ({ cursor, data }) => {\n    return data.hasNext ? { ...cursor, page: cursor.page + 1 } : null;\n  },\n});\n","import { StockModel } from '@/models/Stock.model.ts';\nimport { useEffect, useState } from 'react';\nimport { ListFetcher } from '@ui/list/ListFetcher.tsx';\nimport { staticStockQuery } from '@/subjects/stock/static-stock.query.ts';\nimport { TableList } from '@ui/table/TableList.tsx';\nimport styled from 'styled-components';\nimport { TableGenerator } from '@ui/table/table.type.ts';\nimport { LocaleNumber } from '@ui/formats/localeNumber.tsx';\nimport { useSubjectValue } from '@zetql/react';\nimport { ErrorPage } from '@ui/error/ErrorPage.tsx';\nimport { UiButton } from '@ui/buttons';\nimport { AppGutter } from '@/routes/layout/AppLayout.tsx';\nimport { TableClassNames } from '@ui/table/table.style.ts';\n\nconst UpDown = styled.span`\n  display: block;\n  margin-top: 4px;\n  color: #121212;\n  &.is-down {\n    color: #007aff;\n  }\n  &.is-up {\n    color: #e74c3c;\n  }\n`;\n\nconst generator: TableGenerator<StockModel> = [\n  {\n    key: 'id',\n    body: (data) => data.id.toString(),\n    head: 'ID',\n    width: '60px',\n  },\n  {\n    key: 'name',\n    body: (data) => data.name,\n    head: 'Name',\n    flex: 2.5,\n  },\n  {\n    key: 'symbol',\n    body: (data) => data.symbol,\n    head: 'Symbol',\n  },\n  {\n    key: 'company',\n    body: (data) => data.company,\n    head: 'Company',\n  },\n  {\n    key: 'price',\n    body: (data) => (\n      <>\n        <LocaleNumber amount={data.price} />\n        <UpDown\n          className={\n            data.percent > 0\n              ? 'is-up'\n              : data.percent === 0\n              ? undefined\n              : 'is-down'\n          }\n        >\n          {data.percent}%\n        </UpDown>\n      </>\n    ),\n    head: 'Price',\n  },\n];\n\nconst Controller = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  padding: 10px 20px;\n  position: sticky;\n  top: 0;\n  width: 100%;\n  height: 60px;\n  z-index: 4;\n  background-color: #f8f8f8;\n  label {\n    display: block;\n  }\n  select {\n    width: 100px;\n    padding: 0 10px;\n    border: none;\n    height: 40px;\n    margin-left: 10px;\n    -webkit-appearance: none;\n    -moz-appearance: none;\n    appearance: none;\n    margin-right: 10px;\n  }\n  ${UiButton} {\n    margin-left: 10px;\n  }\n`;\n\nconst StyledTableList = styled(TableList<StockModel>)`\n  & .${TableClassNames.thead} {\n    position: sticky;\n    top: 60px;\n  }\n`;\nconst pageSize = [10, 20, 30];\n\nconst ScrollableWrapper = styled.div`\n  overflow-y: scroll;\n  height: 100%;\n  position: relative;\n`;\nconst StaticCursor = () => {\n  const {\n    isFetching,\n    isRefetching,\n    isFetchingPrev,\n    isFetchingNext,\n    data,\n    error,\n    nextCursor,\n  } = useSubjectValue(staticStockQuery);\n  const [size, setSize] = useState(pageSize[0]);\n  useEffect(() => {\n    const cacheKey = `stock_${size}`;\n    staticStockQuery.fetchQuery((firstCursor) => {\n      if (firstCursor) {\n        // it will keep the old cache if it exists\n        return firstCursor;\n      }\n      return { size, page: 1 };\n    }, cacheKey);\n  }, [size]);\n  if (error) {\n    return (\n      <ErrorPage\n        buttons={[\n          {\n            label: 'reload',\n            onClick: () => {\n              staticStockQuery.refetchQuery();\n            },\n          },\n        ]}\n      />\n    );\n  }\n  return (\n    <ScrollableWrapper>\n      <AppGutter>\n        <Controller>\n          <label htmlFor={'size'}>Page Size</label>\n          <select\n            id={'size'}\n            defaultValue={size}\n            onChange={(e) => {\n              setSize(Number(e.target.value));\n            }}\n          >\n            {pageSize.map((n) => {\n              return (\n                <option value={n} key={n.toString()}>\n                  {n.toString()}\n                </option>\n              );\n            })}\n          </select>\n          <UiButton\n            fillColor={'primary'}\n            fillType={'line'}\n            onClick={() => {\n              staticStockQuery.fetchQuery({ size, page: 1 });\n            }}\n          >\n            restart\n          </UiButton>\n          <UiButton\n            fillColor={'primary'}\n            fillType={'fill'}\n            onClick={() => {\n              staticStockQuery.refetchQuery();\n            }}\n          >\n            refetch\n          </UiButton>\n        </Controller>\n        <StyledTableList\n          isLoading={!staticStockQuery.isInitiated() && isFetching}\n          className={'default-table'}\n          items={data}\n          trackBy={(item) => item.id.toString()}\n          generator={generator}\n        />\n        <ListFetcher\n          hasNext={!!nextCursor}\n          isFetching={isFetchingNext}\n          recheckDeps={`${isRefetching}_${isFetchingPrev}`}\n          fetch={staticStockQuery.fetchNext}\n        />\n      </AppGutter>\n    </ScrollableWrapper>\n  );\n};\n\nexport default StaticCursor;\n","export const fetchClient = (...args: Parameters<typeof fetch>) => {\n\treturn fetch(...args).then((res) => {\n\t\treturn res\n\t\t\t.json()\n\t\t\t.then((json) => {\n\t\t\t\tif (!res.ok) {\n\t\t\t\t\tthrow json;\n\t\t\t\t}\n\t\t\t\treturn json;\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tif (res.ok) {\n\t\t\t\t\treturn {};\n\t\t\t\t} else {\n\t\t\t\t\tthrow err;\n\t\t\t\t}\n\t\t\t});\n\t});\n};\n","import { ReactNode } from 'react';\nimport styled from 'styled-components';\n\nexport const commaTransform = (num: number | string) => {\n\ttry {\n\t\treturn typeof num === 'number' ? num.toLocaleString() : Number(num).toLocaleString();\n\t} catch (e) {\n\t\treturn '???';\n\t}\n};\n\nconst Wrapper = styled.span`\n\tfont-variant-numeric: tabular-nums;\n`;\nexport const LocaleNumber = ({\n\tamount,\n\tclassName,\n\tunit,\n\titemProp,\n}: {\n\tamount: number | string;\n\tclassName?: string;\n\tunit?: ReactNode;\n\titemProp?: string;\n}) => {\n\treturn (\n\t\t<Wrapper className={className} itemProp={itemProp}>\n\t\t\t{commaTransform(amount)}\n\t\t\t{unit ?? '원'}\n\t\t</Wrapper>\n\t);\n};\n","import { useEffect, useRef, useState } from 'react';\nimport { RelativeThrobber } from '@ui/throbber';\n\nexport const ListFetcher = ({\n\thasNext,\n\tfetch,\n\trecheckDeps,\n\tisFetching,\n\troot,\n}: {\n\tfetch: () => void;\n\thasNext: boolean;\n\trecheckDeps?: any;\n\tisFetching: boolean;\n\troot?: HTMLElement | null;\n}) => {\n\tconst fetchRef = useRef(fetch);\n\tconst [el, setEl] = useState<HTMLElement | null>(null);\n\n\tuseEffect(() => {\n\t\tif (el && hasNext && !isFetching) {\n\t\t\tconst observer = new IntersectionObserver(\n\t\t\t\t(\n\t\t\t\t\tentries: IntersectionObserverEntry[],\n\t\t\t\t\tobserver: IntersectionObserver\n\t\t\t\t) => {\n\t\t\t\t\tentries.forEach((entry) => {\n\t\t\t\t\t\tif (entry.isIntersecting) {\n\t\t\t\t\t\t\tfetchRef.current?.();\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t},\n\t\t\t\t{ root, rootMargin: '-40px 0px' }\n\t\t\t);\n\t\t\tobserver.observe(el);\n\t\t\treturn () => {\n\t\t\t\tobserver.disconnect();\n\t\t\t};\n\t\t}\n\t}, [el, hasNext, isFetching, recheckDeps]);\n\tif (hasNext) {\n\t\treturn (\n\t\t\t<div ref={setEl}>\n\t\t\t\t<RelativeThrobber />\n\t\t\t</div>\n\t\t);\n\t}\n\treturn null;\n};\n","import { useStateRef } from '@ui/hooks/useStateRef';\nimport { SetStatePayload, TypeOfValue } from \"@ui/type.ts\";\n\nexport const TableSortLabel = { desc: 'desc', asc: 'asc' } as const;\nexport type TableSortLabel = TypeOfValue<typeof TableSortLabel>;\nexport type TableSortData = { key: string; order: TableSortLabel };\n\nexport interface UiTableState {\n\tsortData: TableSortData;\n\tquery: string;\n\tselectFilters: Map<string, string>;\n\tselectedSet: Set<string>;\n}\n\nconst TABLE_STATE_INIT: UiTableState = {\n\tsortData: { key: '', order: 'desc' },\n\tquery: '',\n\tselectFilters: new Map(),\n\tselectedSet: new Set(),\n};\n\nexport type UiTableSetState = (fn: SetStatePayload<UiTableState>, b?: boolean) => void;\nexport const useTableState = () => {\n\tconst { state, setState, getState, setMutation } = useStateRef<UiTableState>(() => {\n\t\treturn {\n\t\t\t...TABLE_STATE_INIT,\n\t\t};\n\t});\n\n\treturn { getTableState: getState, setTableState: setState, mutateTableState: setMutation, tableState: state };\n};\n","import { useCallback, useRef, useState } from 'react'\nimport { SetStatePayload } from \"@ui/type.ts\";\n\ntype SetState<T, P> = (fn: SetStatePayload<T>) => P;\ntype GetState<T> = () => T;\nexport function useStateRef<T>(\n\tinitState: T | (() => T),\n\tsyncFn?: (s: T) => void,\n): { state: T; setState: SetState<T, void>; setMutation: SetState<T, T>; getState: () => T } {\n\tconst stateRef = useRef<T>(initState as T)\n\tif (typeof stateRef.current === 'function' && stateRef.current === initState) {\n\t\tstateRef.current = stateRef.current()\n\t}\n\tconst syncFnRef = useRef(syncFn)\n\tsyncFnRef.current = syncFn\n\tconst [_, trigger] = useState(0)\n\tconst setState: (fn: SetStatePayload<T>, skip?: boolean) => void = useCallback(function (fn: SetStatePayload<T>, skipTrigger?: boolean) {\n\t\tconst origin = stateRef.current\n\t\tconst state = typeof fn === 'function' ? (fn as (s:T) => T)(origin) : fn\n\t\tconst keys = Object.keys(state) as Array<keyof T>\n\t\tif (keys.some((key) => state[key] !== origin[key])) {\n\t\t\tif (typeof origin === 'object' && origin && !Array.isArray(origin)) {\n\t\t\t\tstateRef.current = { ...origin, ...state }\n\t\t\t} else {\n\t\t\t\tstateRef.current = state as T\n\t\t\t}\n\t\t\tif (typeof syncFnRef.current === 'function') {\n\t\t\t\tsyncFnRef.current(stateRef.current)\n\t\t\t}\n\t\t\tif (!skipTrigger) {\n\t\t\t\ttrigger((n) => n + 1)\n\t\t\t}\n\t\t}\n\t}, [])\n\tconst setMutation = useCallback((fn: SetStatePayload<T>) => {\n\t\tsetState(fn, true)\n\t\treturn stateRef.current\n\t}, [])\n\tconst getState: GetState<T> = useCallback(() => {\n\t\treturn stateRef.current\n\t}, [])\n\treturn { state: stateRef.current, setState, setMutation, getState }\n}\n","import React, { memo, ReactElement, ReactNode, useMemo } from 'react';\nimport { classnames } from '@ui/helpers/classnames';\nimport { UiTableSetState, UiTableState, useTableState } from './useTableState';\nimport { RelativeThrobber } from '@ui/throbber';\nimport {\n\tCellHeadCreator,\n\tTableGenerator,\n\tTableGeneratorRow,\n\tTableGroupProps,\n\tTableProp,\n\tTableSearchQuery,\n} from '@ui/table/table.type.ts';\nimport { TableClassNames, TableStyle } from '@ui/table/table.style.ts';\n\nconst getWidthStyle = (width?: number | string, flex?: number) => {\n\treturn typeof width === 'string'\n\t\t? { width, flex: flex || 'none' }\n\t\t: flex\n\t\t? { flex: `${flex} ${flex} ${flex * 10}px` }\n\t\t: { flex: '1 1 10px' };\n};\nconst HeadRowCreator = <T,>({\n\tgenerator,\n\ttableState,\n\tsetTableState,\n}: {\n\tgenerator: TableGenerator<T>;\n\ttableState: UiTableState;\n\tsetTableState: UiTableSetState;\n}) => {\n\tconst { sortData } = tableState;\n\treturn (\n\t\t<TableStyle.Tr>\n\t\t\t{generator.map(({ head, width, flex, sort, className, key, headSelect }) => {\n\t\t\t\tconst headFn = getHeader<T>(head);\n\t\t\t\treturn (\n\t\t\t\t\t<TableStyle.Th key={key} className={className} style={getWidthStyle(width, flex)}>\n\t\t\t\t\t\t{headFn(tableState, setTableState, key === sortData.key ? sortData.order : '')}\n\t\t\t\t\t</TableStyle.Th>\n\t\t\t\t);\n\t\t\t})}\n\t\t</TableStyle.Tr>\n\t);\n};\nconst BodyRowCreator = <T,>({\n\titem,\n\tonRowClick,\n\tgenerator,\n\ttableState,\n\tsetTableState,\n\tisSelected,\n\tattachmentRender,\n}: {\n\titem: T;\n\tonRowClick?: (s: T) => void;\n\tgenerator: TableGenerator<T>;\n\ttableState: UiTableState;\n\tsetTableState: UiTableSetState;\n\tisSelected: boolean;\n\tattachmentRender?: TableProp<T>['attachmentRender'];\n}) => {\n\tconst isClickable = Boolean(onRowClick);\n\tconst row = (\n\t\t<TableStyle.Tr\n\t\t\titemScope\n\t\t\tclassName={classnames(isClickable ? 'is-clickable' : '', isSelected ? 'is-selected' : '')}\n\t\t\ttabIndex={0}\n\t\t\tonClick={() => {\n\t\t\t\tonRowClick?.(item);\n\t\t\t}}\n\t\t>\n\t\t\t{generator.map(({ body, width, flex, className, key }) => {\n\t\t\t\treturn (\n\t\t\t\t\t<TableStyle.Td key={key} itemProp={key} className={className} style={getWidthStyle(width, flex)}>\n\t\t\t\t\t\t{body(item, tableState, setTableState)}\n\t\t\t\t\t</TableStyle.Td>\n\t\t\t\t);\n\t\t\t})}\n\t\t</TableStyle.Tr>\n\t);\n\tif (attachmentRender) {\n\t\treturn (\n\t\t\t<TableStyle.Attachment itemScope>\n\t\t\t\t{row}\n\t\t\t\t{attachmentRender(item, tableState, setTableState)}\n\t\t\t</TableStyle.Attachment>\n\t\t);\n\t}\n\treturn row;\n};\n\nconst EmptyRowCreator = ({ isLoading, empty }: { isLoading?: boolean; empty: ReactNode }) => {\n\treturn <TableStyle.Empty>{isLoading ? <RelativeThrobber /> : empty || 'Nothing to Display'}</TableStyle.Empty>;\n};\n\nfunction getHeader<T>(head: TableGeneratorRow<T>['head']): CellHeadCreator {\n\tconst type = typeof head;\n\tif (type === 'string') {\n\t\treturn () => head as string;\n\t}\n\tif (type === 'function') {\n\t\treturn head as CellHeadCreator;\n\t}\n\treturn () => '';\n}\n\nconst useNormalizeProps = <T,>(props: TableProp<T>) => {\n\tconst { trackBy, generator } = props;\n\tconst trackByFn = useMemo(() => {\n\t\tif (typeof trackBy === 'function') {\n\t\t\treturn trackBy;\n\t\t}\n\t\tif (typeof trackBy === 'string') {\n\t\t\treturn (item: T) => {\n\t\t\t\treturn (item[trackBy as keyof T] || '').toString();\n\t\t\t};\n\t\t}\n\t\treturn (item: T, i: number) => {\n\t\t\treturn i.toString();\n\t\t};\n\t}, [trackBy]);\n\tconst filterData = useMemo(() => {\n\t\tconst filterData: {\n\t\t\tselect: Map<string, TableSearchQuery<T>>;\n\t\t\tquery: Map<string, TableSearchQuery<T>>;\n\t\t} = {\n\t\t\tselect: new Map(),\n\t\t\tquery: new Map(),\n\t\t};\n\t\tgenerator.forEach(({ key, headSelect, query }) => {\n\t\t\tif (headSelect) {\n\t\t\t\tfilterData.select.set(key, headSelect.filter);\n\t\t\t}\n\t\t\tif (query) {\n\t\t\t\tfilterData.query.set(key, query);\n\t\t\t}\n\t\t});\n\t\treturn filterData;\n\t}, [generator]);\n\treturn { trackByFn, filterData };\n};\n\n// eslint-disable-next-line react/display-name\nexport const TableList = memo(<T = any,>(props: TableProp<T>) => {\n\tconst { filter, items, generator, className, attachmentRender, onRowClick, isLoading, empty, normalizeQuery } = props;\n\n\tconst { tableState, setTableState } = useTableState();\n\tconst { sortData, query: rq, selectFilters } = tableState;\n\tconst query = normalizeQuery ? normalizeQuery(rq) : rq;\n\tconst sortFn = generator.find(({ key }) => sortData.key === key)?.sort;\n\tconst { filterData, trackByFn } = useNormalizeProps(props);\n\n\tconst filtered = useMemo(() => {\n\t\tconst filtered = items.filter((item) => {\n\t\t\tfor (const [key, fn] of filterData.select) {\n\t\t\t\tconst value = selectFilters.get(key);\n\t\t\t\t// console.log(value, fn)\n\t\t\t\tif (fn && value && !fn(item, value, tableState)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (query) {\n\t\t\t\tlet passed = false;\n\t\t\t\tfor (const [key, fn] of filterData.query) {\n\t\t\t\t\tif (fn?.(item, query, tableState)) {\n\t\t\t\t\t\tpassed = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!passed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn filter ? filter(item) : true;\n\t\t});\n\t\tif (!sortFn) {\n\t\t\treturn filtered;\n\t\t}\n\t\treturn filtered.sort(sortFn(sortData.order));\n\t}, [filterData, items, tableState, filter, selectFilters]);\n\treturn (\n\t\t<TableStyle.Table className={className}>\n\t\t\t<TableStyle.Thead className={TableClassNames.thead}>\n\t\t\t\t<HeadRowCreator generator={generator} tableState={tableState} setTableState={setTableState} />\n\t\t\t</TableStyle.Thead>\n\t\t\t<TableStyle.Tbody className={TableClassNames.tbody}>\n\t\t\t\t{!isLoading && filtered.length > 0 ? (\n\t\t\t\t\tfiltered.map((item, i) => {\n\t\t\t\t\t\tconst key = trackByFn(item, i);\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<BodyRowCreator\n\t\t\t\t\t\t\t\titem={item}\n\t\t\t\t\t\t\t\tkey={key}\n\t\t\t\t\t\t\t\tisSelected={tableState.selectedSet.has(key)}\n\t\t\t\t\t\t\t\tgenerator={generator}\n\t\t\t\t\t\t\t\tonRowClick={onRowClick}\n\t\t\t\t\t\t\t\ttableState={tableState}\n\t\t\t\t\t\t\t\tsetTableState={setTableState}\n\t\t\t\t\t\t\t\tattachmentRender={attachmentRender}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t) : (\n\t\t\t\t\t<EmptyRowCreator empty={empty} isLoading={isLoading} />\n\t\t\t\t)}\n\t\t\t</TableStyle.Tbody>\n\t\t</TableStyle.Table>\n\t);\n}) as <T>(p: TableProp<T>) => ReactElement | null;\n(TableList as any).displayName = 'TableList';\n\n// eslint-disable-next-line react/display-name\nexport const GroupTableList = memo(<T extends { id: string } = any>(props: TableGroupProps<T>) => {\n\tconst {\n\t\tfilter,\n\t\titems,\n\t\tgenerator,\n\t\tgroupBy,\n\t\tclassName,\n\t\tempty,\n\t\tattachmentRender,\n\t\tonRowClick,\n\t\tisLoading,\n\t\tnormalizeQuery,\n\t\tgroupSort,\n\t\tgroupTitleRenderer,\n\t} = props;\n\n\tconst { tableState, setTableState } = useTableState();\n\tconst { sortData, query: rq, selectFilters } = tableState;\n\tconst query = normalizeQuery ? normalizeQuery(rq) : rq;\n\tconst sortFn = generator.find(({ key }) => sortData.key === key)?.sort;\n\tconst { filterData, trackByFn } = useNormalizeProps(props);\n\n\tconst groupByFn = useMemo(() => {\n\t\tif (typeof groupBy === 'function') {\n\t\t\treturn groupBy;\n\t\t}\n\t\tif (typeof groupBy === 'string') {\n\t\t\treturn (item: T) => {\n\t\t\t\treturn (item[groupBy as keyof T] || '').toString();\n\t\t\t};\n\t\t}\n\t\treturn (item: T, i: number) => {\n\t\t\treturn i.toString();\n\t\t};\n\t}, [groupBy]);\n\n\tconst filtered = useMemo(() => {\n\t\tconst map: Record<string, T> = {};\n\t\tconst group: Record<string, { groupId: string; ids: Array<string> }> = {};\n\t\titems.forEach((item, i) => {\n\t\t\tfor (const [key, fn] of filterData.select) {\n\t\t\t\tconst value = selectFilters.get(key);\n\t\t\t\tif (fn && value && !fn(item, value, tableState)) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (query) {\n\t\t\t\tlet passed = false;\n\t\t\t\tfor (const [key, fn] of filterData.query) {\n\t\t\t\t\tif (fn?.(item, query, tableState)) {\n\t\t\t\t\t\tpassed = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!passed) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst passed = filter ? filter(item) : true;\n\t\t\tif (passed) {\n\t\t\t\tconst key = trackByFn(item, i);\n\t\t\t\tconst groupId = groupByFn(item, i);\n\t\t\t\tmap[key] = item;\n\t\t\t\tif (!group[groupId]) {\n\t\t\t\t\tgroup[groupId] = { groupId, ids: [] };\n\t\t\t\t}\n\t\t\t\tgroup[groupId].ids.push(key);\n\t\t\t}\n\t\t});\n\t\treturn { passedGroup: group, passedMap: map };\n\t}, [filterData, items, tableState, filter, trackByFn, groupByFn]);\n\n\tconst groupedList = useMemo(() => {\n\t\tconst list: Array<{ type: 'content' | 'title'; id: string }> = [];\n\t\tconst { passedMap, passedGroup } = filtered;\n\t\tconst groups = Object.values(passedGroup);\n\t\tif (groupSort) {\n\t\t\tgroups.sort(groupSort);\n\t\t}\n\t\tgroups.forEach(({ groupId, ids }) => {\n\t\t\tif (ids.length && ids.find((itemId) => !!passedMap[itemId])) {\n\t\t\t\tconst sortedIds = sortFn ? ids.sort((a, b) => sortFn(sortData.order)(passedMap[a], passedMap[b])) : ids;\n\t\t\t\tlist.push({ type: 'title', id: groupId });\n\t\t\t\tsortedIds.forEach((itemId) => {\n\t\t\t\t\tif (passedMap[itemId]) {\n\t\t\t\t\t\tlist.push({ type: 'content', id: itemId });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t\treturn list;\n\t}, [filtered, groupSort]);\n\n\treturn (\n\t\t<TableStyle.Table className={className}>\n\t\t\t<TableStyle.Thead className={TableClassNames.thead}>\n\t\t\t\t<HeadRowCreator generator={generator} tableState={tableState} setTableState={setTableState} />\n\t\t\t</TableStyle.Thead>\n\t\t\t<TableStyle.Tbody className={TableClassNames.tbody}>\n\t\t\t\t{!isLoading && groupedList.length > 0 ? (\n\t\t\t\t\tgroupedList.map((item, i) => {\n\t\t\t\t\t\tconst { id: key, type } = item;\n\t\t\t\t\t\tif (type === 'title') {\n\t\t\t\t\t\t\treturn groupTitleRenderer(key);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<BodyRowCreator\n\t\t\t\t\t\t\t\titem={filtered.passedMap[key]}\n\t\t\t\t\t\t\t\tkey={'item::' + key}\n\t\t\t\t\t\t\t\tisSelected={tableState.selectedSet.has(key)}\n\t\t\t\t\t\t\t\tgenerator={generator}\n\t\t\t\t\t\t\t\tonRowClick={onRowClick}\n\t\t\t\t\t\t\t\ttableState={tableState}\n\t\t\t\t\t\t\t\tsetTableState={setTableState}\n\t\t\t\t\t\t\t\tattachmentRender={attachmentRender}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t) : (\n\t\t\t\t\t<TableStyle.Empty>\n\t\t\t\t\t\t{isLoading ? <RelativeThrobber /> : <EmptyRowCreator empty={empty} isLoading={isLoading} />}\n\t\t\t\t\t</TableStyle.Empty>\n\t\t\t\t)}\n\t\t\t</TableStyle.Tbody>\n\t\t</TableStyle.Table>\n\t);\n}) as <T>(p: TableGroupProps<T>) => ReactElement | null;\n(GroupTableList as any).displayName = 'GroupTableList';\n"],"names":["staticStockQuery","createInfiniteQuery","query","_ref","size","page","fetchClient","concat","then","_ref2","stocks","data","hasNext","cursorMode","normalize","pages","reduce","p","c","cacheKeyBy","cursor","getNextCursor","_ref3","_objectSpread","UpDown","styled","span","_templateObject","_taggedTemplateLiteral","generator","key","body","id","toString","head","width","name","flex","symbol","company","_jsxs","_Fragment","children","_jsx","LocaleNumber","amount","price","className","percent","undefined","Controller","div","_templateObject2","UiButton","StyledTableList","TableList","_templateObject3","TableClassNames","thead","pageSize","ScrollableWrapper","_templateObject4","_useSubjectValue","useSubjectValue","isFetching","isRefetching","isFetchingPrev","isFetchingNext","error","nextCursor","_useState","useState","_useState2","_slicedToArray","setSize","useEffect","cacheKey","fetchQuery","firstCursor","ErrorPage","buttons","label","onClick","refetchQuery","AppGutter","htmlFor","defaultValue","onChange","e","Number","target","value","map","n","fillColor","fillType","isLoading","isInitiated","items","trackBy","item","ListFetcher","recheckDeps","fetch","fetchNext","apply","arguments","res","json","ok","catch","err","commaTransform","num","toLocaleString","Wrapper","unit","itemProp","root","fetchRef","useRef","el","setEl","observer","IntersectionObserver","entries","forEach","entry","_fetchRef$current","isIntersecting","current","call","rootMargin","observe","disconnect","ref","RelativeThrobber","TABLE_STATE_INIT","sortData","order","selectFilters","Map","selectedSet","Set","useTableState","_useStateRef","initState","syncFn","stateRef","syncFnRef","trigger","setState","useCallback","fn","skipTrigger","origin","state","Object","keys","some","Array","isArray","setMutation","getState","useStateRef","getTableState","setTableState","mutateTableState","tableState","getWidthStyle","HeadRowCreator","TableStyle","Tr","sort","headFn","headSelect","type","getHeader","Th","style","BodyRowCreator","onRowClick","isSelected","attachmentRender","isClickable","Boolean","row","itemScope","classnames","tabIndex","_ref4","Td","Attachment","EmptyRowCreator","_ref5","empty","Empty","useNormalizeProps","props","trackByFn","useMemo","i","filterData","select","_ref6","set","filter","memo","_generator$find","normalizeQuery","_useTableState","rq","sortFn","find","_ref7","_useNormalizeProps","filtered","_step","_iterator","_createForOfIteratorHelper","s","done","_step$value","get","f","_step2","passed","_iterator2","_step2$value","Table","Thead","Tbody","tbody","length","has","displayName","_generator$find2","groupBy","groupSort","groupTitleRenderer","_useTableState2","_ref8","_useNormalizeProps2","groupByFn","group","_step3","_iterator3","_step3$value","_step4","_iterator4","_step4$value","groupId","ids","push","passedGroup","passedMap","groupedList","list","groups","values","_ref9","itemId","sortedIds","a","b"],"sourceRoot":""}